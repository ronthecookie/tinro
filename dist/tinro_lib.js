import{getContext as t}from"svelte";import{writable as e}from"svelte/store";const n=function(){let t="srcdoc"===window.location.pathname;const n=(e,n)=>{t?window.location.hash=e:history.pushState({},"",e),n(s(t))},{subscribe:r,set:i}=e(s(t),e=>{window.hashchange=window.onpopstate=e=>i(s(t));const o=function(t){const e=e=>{const n=e.target.closest("a[href]");n&&/^\/(?!api)(?:\w+[\w/]+)?/.test(n.getAttribute("href"))&&(e.preventDefault(),t(n.getAttribute("href")))};return addEventListener("click",e),()=>removeEventListener("click",e)}(t=>n(t,i));return t=>{window.hashchange=window.onpopstate=null,o()}});return{subscribe:r,goto:t=>n(t,i),params:o,useHashNavigation:e=>i(s(t=void 0===e||e))}}();function s(t){return t?function(){const t=String(window.location.hash.slice(1)||"/").match(/^([^?#]+)(?:\?([^#]+))?(?:\#(.+))?$/);return{path:t[1]||"",query:r(t[2]||""),hash:t[3]||""}}():{path:window.location.pathname,query:r(window.location.search.slice(1)),hash:window.location.hash.slice(1)}}function o(){return t("R:p")}function r(t){const e=t.split("&").map(t=>t.split("=")).reduce((t,e)=>{const n=e[0];if(!n)return t;let s=!(e.length>1)||e[e.length-1];return"string"==typeof s&&s.includes(",")&&(s=s.split(",")),void 0===t[n]?t[n]=[s]:t[n].push(s),t},{});return Object.entries(e).reduce((t,e)=>(t[e[0]]=e[1].length>1?e[1]:e[1][0],t),{})}function i(t){const e=h(t,"href"),s=h(t,"exact",!0),o=h(t,"active-class",!0,"active");return{destroy:n.subscribe(n=>{const r=a(e,n.path);r&&(r.exact&&s||!s)?t.classList.add(o):t.classList.remove(o)})}}function c(t,e=!1){return(t=t.slice(t.startsWith("/#")?2:0,t.endsWith("/*")?-2:void 0)).startsWith("/")||(t="/"+t),"/"===t&&(t=""),e&&!t.endsWith("/")&&(t+="/"),t}function a(t,e){t=c(t,!0),e=c(e,!0);const n=[];let s={},o=!0,r=t.split("/").map(t=>t.startsWith(":")?(n.push(t.slice(1)),"([^\\/]+)"):t).join("\\/"),i=e.match(new RegExp(`^${r}$`));return i||(o=!1,i=e.match(new RegExp("^"+r))),i?(n.forEach((t,e)=>s[t]=i[e+1]),{exact:o,params:s}):null}function u(t){throw new Error(t)}function h(t,e,n,s){const o=[e,"data-"+e].reduce((e,s)=>{const o=t.getAttribute(s);return n&&t.removeAttribute(s),null===o?e:o},!1);return!s&&""===o||(o||(s||!1))}export{i as active,u as err,c as formatPath,a as getPathData,n as router};
